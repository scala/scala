<?xml version="1.0" encoding="UTF-8"?>

<project name="sabbus-maven-deploy" xmlns:artifact="urn:maven-artifact-ant">

  <description>
    SuperSabbus extension for deploying a distribution to Maven. THIS FILE IS MEANT TO BE RUN STANDALONE IN THE MAVEN "distpack" DIRECTORY
  </description>
  <target name="init.properties">
    <!-- Pull in properties from build -->
    <property file="build.properties" />
    <!-- Initialize specific properties -->
    <property name="remote.snapshot.repository" value="https://oss.sonatype.org/content/repositories/snapshots" />
    <property name="remote.release.repository" value="https://oss.sonatype.org/service/local/staging/deploy/maven2" />

    <property name="local.snapshot.repository" value="${user.home}/.m2/repository" />
    <property name="local.release.repository" value="${user.home}/.m2/repository" />
    <property name="repository.credentials.id" value="sonatype-nexus" />
    <property name="settings.file" value="${user.home}/.m2/settings.xml" />

    <echo>Using server[${repository.credentials.id}] for maven repository credentials.
       Please make sure that your ~/.m2/settings.xml has the needed username/password for this server id
     </echo>
  </target>

  <target name="init.maven" depends="init.properties">

    <!-- Add our maven ant tasks -->
    <path id="maven-ant-tasks.classpath" path="maven-ant-tasks-2.1.1.jar" />
    <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant" classpathref="maven-ant-tasks.classpath" />

    <!-- simplify fixing pom versions -->
    <macrodef name="make-pom">
      <attribute name="name" />
      <attribute name="version" />
      <sequential>
        <copy file="@{name}/@{name}-pom.xml" tofile="@{name}/@{name}-pom-fixed.xml" overwrite="true">
          <filterset>
            <filter token="VERSION" value="@{version}" />
            <filter token="RELEASE_REPOSITORY" value="${remote.release.repository}" />
            <filter token="SNAPSHOT_REPOSITORY" value="${remote.snapshot.repository}" />
          </filterset>
        </copy>
        <artifact:pom id="@{name}.pom" file="@{name}/@{name}-pom-fixed.xml" />
      </sequential>
    </macrodef>

    <macrodef name="make-pom-plugin">
      <attribute name="name" />
      <attribute name="version" />
      <sequential>
        <copy file="plugins/@{name}/@{name}-plugin-pom.xml" tofile="plugins/@{name}/@{name}-pom-fixed.xml" overwrite="true">
          <filterset>
            <filter token="VERSION" value="@{version}" />
            <filter token="RELEASE_REPOSITORY" value="${remote.release.repository}" />
            <filter token="SNAPSHOT_REPOSITORY" value="${remote.snapshot.repository}" />
          </filterset>
        </copy>
        <artifact:pom id="plugin-@{name}.pom" file="plugins/@{name}/@{name}-pom-fixed.xml" />
      </sequential>
    </macrodef>
  </target>
  <!-- macros for local deployment -->
  <target name="deploy.local.init" depends="init.maven">
    <!-- Deploy single artifact locally -->
    <macrodef name="deploy-local">
      <attribute name="name" />
      <attribute name="version" />
      <attribute name="repository" />
      <element name="extra-attachments" optional="yes" />
      <sequential>
        <make-pom name="@{name}" version="@{version}" />
        <artifact:install file="@{name}/@{name}.jar">
          <artifact:pom refid="@{name}.pom" />
          <artifact:localRepository path="@{repository}" id="${repository.credentials.id}" />
          <artifact:attach type="jar" file="@{name}/@{name}-src.jar" classifier="sources" />
          <artifact:attach type="jar" file="@{name}/@{name}-docs.jar" classifier="javadoc" />
          <extra-attachments />
        </artifact:install>
      </sequential>
    </macrodef>

    <!-- Deploy compiler plugins -->
    <macrodef name="deploy-local-plugin">
        <attribute name="name" />
        <attribute name="version" />
        <attribute name="repository" />
        <element name="extra-attachments" optional="yes" />
        <sequential>
          <make-pom-plugin name="@{name}" version="@{version}" />
          <artifact:install file="plugins/@{name}/@{name}.jar">
            <artifact:pom refid="plugin-@{name}.pom" />
            <artifact:attach type="jar" file="plugins/@{name}/@{name}-src.jar" classifier="sources" />
            <artifact:attach type="jar" file="plugins/@{name}/@{name}-docs.jar" classifier="javadoc" />
            <artifact:localRepository path="@{repository}" id="${repository.credentials.id}" />
            <extra-attachments />
          </artifact:install>
        </sequential>
      </macrodef>


    <!-- Deploy all artifacts locally -->
    <macrodef name="deploy-local-all">
      <attribute name="repository" />
      <attribute name="version" />
      <sequential>
        <deploy-local name="scala-library" version="@{version}" repository="@{repository}" />
        <deploy-local name="scala-compiler" version="@{version}" repository="@{repository}" />
        <deploy-local-plugin name="continuations" version="@{version}" repository="@{repository}"/>
        <deploy-local name="scala-dbc" version="@{version}" repository="@{repository}" />
        <deploy-local name="scala-swing" version="@{version}" repository="@{repository}"/>
      	<deploy-local name="scalap" version="@{version}" repository="@{repository}"/>
      	<deploy-local name="scala-partest" version="@{version}" repository="@{repository}"/>
      	<deploy-local name="jline" version="@{version}" repository="@{repository}"/>
      </sequential>
    </macrodef>
  </target>

  <!-- macros for remote deployment -->
  <target name="deploy.remote.init" depends="init.maven">
    <!-- Deploy single artifact locally -->
    <macrodef name="deploy-remote">
      <attribute name="name" />
      <attribute name="repository" />
      <attribute name="version" />
      <element name="extra-attachments" optional="yes" />
      <sequential>
        <make-pom name="@{name}" version="@{version}" />
        <artifact:deploy file="@{name}/@{name}.jar" settingsFile="${settings.file}">
          <artifact:pom refid="@{name}.pom" />
          <artifact:remoteRepository url="@{repository}" id="${repository.credentials.id}" />
          <artifact:attach type="jar" file="@{name}/@{name}-src.jar" classifier="sources" />
          <artifact:attach type="jar" file="@{name}/@{name}-docs.jar" classifier="javadoc" />
          <extra-attachments />
        </artifact:deploy>
      </sequential>
    </macrodef>

    <!-- Deploy compiler plugins -->
    <macrodef name="deploy-remote-plugin">
        <attribute name="name" />
        <attribute name="version" />
        <attribute name="repository" />
        <element name="extra-attachments" optional="yes" />
        <sequential>
          <make-pom-plugin name="@{name}" version="@{version}" />
          <artifact:deploy file="plugins/@{name}/@{name}.jar" settingsFile="${settings.file}">
            <artifact:pom refid="plugin-@{name}.pom" />
            <artifact:attach type="jar" file="plugins/@{name}/@{name}-src.jar" classifier="sources" />
            <artifact:attach type="jar" file="plugins/@{name}/@{name}-docs.jar" classifier="javadoc" />
            <artifact:remoteRepository url="@{repository}" id="${repository.credentials.id}" />
            <extra-attachments />
          </artifact:deploy>
        </sequential>
      </macrodef>

    <!-- Deploy all artifacts locally -->
    <macrodef name="deploy-remote-all">
      <attribute name="repository" />
      <attribute name="version" />
      <sequential>
        <deploy-remote name="scala-library" version="@{version}" repository="@{repository}">
          <extra-attachments>
            <artifact:attach type="jar" file="scala-library/scala-library-docs.jar" classifier="javadoc" />
          </extra-attachments>
        </deploy-remote>
      	<deploy-remote name="jline" version="@{version}" repository="@{repository}"/>
        <deploy-remote name="scala-compiler" version="@{version}" repository="@{repository}" />
        <deploy-remote name="scala-dbc" version="@{version}" repository="@{repository}" />
        <deploy-remote name="scala-swing" version="@{version}" repository="@{repository}"/>
      	<deploy-remote name="scalap" version="@{version}" repository="@{repository}"/>
      	<deploy-remote name="scala-partest" version="@{version}" repository="@{repository}"/>
        <deploy-remote-plugin name="continuations" version="@{version}" repository="@{repository}"/> 
      </sequential>
    </macrodef>

    <!-- PGP Signed deployment -->
    <macrodef name="deploy-remote-signed-single">
      <attribute name="pom" />
      <attribute name="repository" />
      <attribute name="jar" />
      <attribute name="srcjar" />
      <attribute name="docjar" />
      <sequential>
        <artifact:mvn>
          <arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" />
          <arg value="-Durl=@{repository}" />
          <arg value="-DrepositoryId=${repository.credentials.id}" />
          <arg value="-DpomFile=@{pom}" />
          <arg value="-Dfile=@{jar}" />
          <arg value="-Dsources=@{srcjar}" />
          <arg value="-Djavadoc=@{docjar}" />
          <arg value="-Pgpg" />
          <arg value="-Dgpg.useagent=true" />
        </artifact:mvn>
      </sequential>
    </macrodef>
    <macrodef name="deploy-remote-signed">
      <attribute name="name" />
      <attribute name="repository" />
      <attribute name="version" />
      <element name="extra-attachments" optional="yes" />
      <sequential>
        <make-pom name="@{name}" version="@{version}" />
        <deploy-remote-signed-single
           pom="@{name}/@{name}-pom-fixed.xml"
           repository="@{repository}"
           jar="@{name}/@{name}.jar"
           srcjar="@{name}/@{name}-src.jar"
           docjar="@{name}/@{name}-docs.jar" />
      </sequential>
    </macrodef>
    <macrodef name="deploy-remote-plugin-signed">
      <attribute name="name" />
      <attribute name="repository" />
      <attribute name="version" />
      <element name="extra-attachments" optional="yes" />
      <sequential>
        <make-pom-plugin name="@{name}" version="@{version}" />
        <deploy-remote-signed-single
           pom="plugins/@{name}/@{name}-pom-fixed.xml"
           repository="@{repository}"
           jar="plugins/@{name}/@{name}.jar"
           srcjar="plugins/@{name}/@{name}-src.jar"
           docjar="plugins/@{name}/@{name}-docs.jar" />
      </sequential>
    </macrodef>
    <macrodef name="deploy-remote-signed-all">
      <attribute name="repository" />
      <attribute name="version" />
      <sequential>
        <deploy-remote-plugin-signed name="continuations" version="@{version}" repository="@{repository}"/> 
      	<deploy-remote-signed name="scala-library" version="@{version}" repository="@{repository}"/>
      	<deploy-remote-signed name="jline" version="@{version}" repository="@{repository}"/>
        <deploy-remote-signed name="scala-compiler" version="@{version}" repository="@{repository}" />
        <deploy-remote-signed name="scala-dbc" version="@{version}" repository="@{repository}" />
        <deploy-remote-signed name="scala-swing" version="@{version}" repository="@{repository}"/>
      	<deploy-remote-signed name="scalap" version="@{version}" repository="@{repository}"/>
      	<deploy-remote-signed name="scala-partest" version="@{version}" repository="@{repository}"/>
      </sequential>
    </macrodef>
  </target>

  <!-- Local Targets -->
  <target name="deploy.snapshot.local" depends="deploy.local.init" description="Deploys the bundled snapshot of the Scala Lanaguage to a local maven repository">
    <deploy-local-all version="${maven.snapshot.version.number}" repository="${local.snapshot.repository}" />
  </target>

  <target name="deploy.release.local" depends="deploy.local.init" description="Deploys the bundled files as a release into the local Maven repository">
    <deploy-local-all version="${version.number}" repository="${local.release.repository}" />
  </target>

  <!-- Remote Targets -->
  <target name="deploy.signed.snapshot" depends="deploy.remote.init" description="Deploys the bundled files as a snapshot into the desired remote Maven repository">
      <deploy-remote-signed-all version="${maven.snapshot.version.number}" repository="${remote.snapshot.repository}" />
  </target>

  <target name="deploy.signed.release" depends="deploy.remote.init" description="Deploys the bundled files as a release into the desired remote Maven repository">
    <deploy-remote-signed-all version="${version.number}" repository="${remote.release.repository}" />
  </target>

  <target name="deploy.snapshot" depends="deploy.remote.init" description="Deploys the bundled files as a snapshot into the desired remote Maven repository">
      <deploy-remote-all version="${maven.snapshot.version.number}" repository="${remote.snapshot.repository}" />
  </target>

  <target name="deploy.release" depends="deploy.remote.init" description="Deploys the bundled files as a release into the desired remote Maven repository">
    <deploy-remote-all version="${version.number}" repository="${remote.release.repository}" />
  </target>
</project>
