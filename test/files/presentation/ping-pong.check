reload: PingPong.scala

askTypeCompletion at PingPong.scala(10,23)
================================================================================
[response] aksTypeCompletion at (10,23)
retrieved 40 members
[accessible:  true] `method !=(x$1: Any)Boolean`
[accessible:  true] `method !=(x$1: AnyRef)Boolean`
[accessible:  true] `method ##()Int`
[accessible:  true] `method +(other: String)String`
[accessible:  true] `method ->[B](y: B)(Pong, B)`
[accessible:  true] `method ==(x$1: Any)Boolean`
[accessible:  true] `method ==(x$1: AnyRef)Boolean`
[accessible:  true] `method asInstanceOf[T0]=> T0`
[accessible:  true] `method ensuring(cond: Boolean)Pong`
[accessible:  true] `method ensuring(cond: Boolean, msg: => Any)Pong`
[accessible:  true] `method ensuring(cond: Pong => Boolean)Pong`
[accessible:  true] `method ensuring(cond: Pong => Boolean, msg: => Any)Pong`
[accessible:  true] `method eq(x$1: AnyRef)Boolean`
[accessible:  true] `method equals(x$1: Any)Boolean`
[accessible:  true] `method formatted(fmtstr: String)String`
[accessible:  true] `method hashCode()Int`
[accessible:  true] `method isInstanceOf[T0]=> Boolean`
[accessible:  true] `method ne(x$1: AnyRef)Boolean`
[accessible:  true] `method notify()Unit`
[accessible:  true] `method notifyAll()Unit`
[accessible:  true] `method poke()Unit`
[accessible:  true] `method synchronized[T0](x$1: T0)T0`
[accessible:  true] `method toString()String`
[accessible:  true] `method wait()Unit`
[accessible:  true] `method wait(x$1: Long)Unit`
[accessible:  true] `method wait(x$1: Long, x$2: Int)Unit`
[accessible:  true] `method x=> Pong`
[accessible:  true] `method →[B](y: B)(Pong, B)`
[accessible: false] `method clone()Object`
[accessible: false] `method finalize()Unit`
[accessible: false] `value __leftOfArrowPong`
[accessible: false] `value __resultOfEnsuringPong`
[accessible: false] `value nameString`
[accessible: false] `value pingPing`
[accessible: false] `value selfAny`
================================================================================

askTypeCompletion at PingPong.scala(19,20)
================================================================================
[response] aksTypeCompletion at (19,20)
retrieved 40 members
[accessible:  true] `method !=(x$1: Any)Boolean`
[accessible:  true] `method !=(x$1: AnyRef)Boolean`
[accessible:  true] `method ##()Int`
[accessible:  true] `method +(other: String)String`
[accessible:  true] `method ->[B](y: B)(Ping, B)`
[accessible:  true] `method ==(x$1: Any)Boolean`
[accessible:  true] `method ==(x$1: AnyRef)Boolean`
[accessible:  true] `method asInstanceOf[T0]=> T0`
[accessible:  true] `method ensuring(cond: Boolean)Ping`
[accessible:  true] `method ensuring(cond: Boolean, msg: => Any)Ping`
[accessible:  true] `method ensuring(cond: Ping => Boolean)Ping`
[accessible:  true] `method ensuring(cond: Ping => Boolean, msg: => Any)Ping`
[accessible:  true] `method eq(x$1: AnyRef)Boolean`
[accessible:  true] `method equals(x$1: Any)Boolean`
[accessible:  true] `method formatted(fmtstr: String)String`
[accessible:  true] `method hashCode()Int`
[accessible:  true] `method isInstanceOf[T0]=> Boolean`
[accessible:  true] `method loop=> Unit`
[accessible:  true] `method name=> String`
[accessible:  true] `method ne(x$1: AnyRef)Boolean`
[accessible:  true] `method notify()Unit`
[accessible:  true] `method notifyAll()Unit`
[accessible:  true] `method poke=> Unit`
[accessible:  true] `method synchronized[T0](x$1: T0)T0`
[accessible:  true] `method toString()String`
[accessible:  true] `method wait()Unit`
[accessible:  true] `method wait(x$1: Long)Unit`
[accessible:  true] `method wait(x$1: Long, x$2: Int)Unit`
[accessible:  true] `method x=> Ping`
[accessible:  true] `method →[B](y: B)(Ping, B)`
[accessible: false] `method clone()Object`
[accessible: false] `method finalize()Unit`
[accessible: false] `value __leftOfArrowPing`
[accessible: false] `value __resultOfEnsuringPing`
[accessible: false] `value pongPong`
[accessible: false] `value selfAny`
================================================================================

askType at PingPong.scala(8,10)
================================================================================
[response] askTypeAt at (8,10)
def loop: Unit = Ping.this.poke()
================================================================================

askType at PingPong.scala(10,10)
================================================================================
[response] askTypeAt at (10,10)
def poke: Unit = Ping.this.pong.poke()
================================================================================

askType at PingPong.scala(17,10)
================================================================================
[response] askTypeAt at (17,10)
private[this] val name: String = "pong"
================================================================================
