reload: Completions.scala

askTypeCompletion at Completions.scala(17,9)
================================================================================
[response] askCompletionAt (17,9)
retrieved 43 members
[inaccessible] private def privateM: String
[inaccessible] private[this] val privateV: String
[inaccessible] private[this] val protectedV: String
[inaccessible] protected def protectedValM: String
[inaccessible] protected[package lang] def clone(): Object
[inaccessible] protected[package lang] def finalize(): Unit
def +(other: String): String
def ->[B](y: B): (test.Compat.type, B)
def ensuring(cond: Boolean): test.Compat.type
def ensuring(cond: Boolean,msg: => Any): test.Compat.type
def ensuring(cond: test.Compat.type => Boolean): test.Compat.type
def ensuring(cond: test.Compat.type => Boolean,msg: => Any): test.Compat.type
def equals(x$1: Any): Boolean
def formatted(fmtstr: String): String
def hashCode(): Int
def toString(): String
def â†’[B](y: B): (test.Compat.type, B)
final def !=(x$1: Any): Boolean
final def !=(x$1: AnyRef): Boolean
final def ##(): Int
final def ==(x$1: Any): Boolean
final def ==(x$1: AnyRef): Boolean
final def asInstanceOf[T0]: T0
final def eq(x$1: AnyRef): Boolean
final def isInstanceOf[T0]: Boolean
final def ne(x$1: AnyRef): Boolean
final def notify(): Unit
final def notifyAll(): Unit
final def synchronized[T0](x$1: T0): T0
final def wait(): Unit
final def wait(x$1: Long): Unit
final def wait(x$1: Long,x$2: Int): Unit
final private[this] val CONST_STRING: String("constant")
lazy private[this] var foo: Int
private[package test] def pkgPrivateM: String
private[this] val __leftOfArrow: test.Compat.type
private[this] val __resultOfEnsuring: test.Compat.type
private[this] val __stringToFormat: test.Compat.type
private[this] val __thingToAdd: test.Compat.type
private[this] val pkgPrivateV: String
================================================================================
