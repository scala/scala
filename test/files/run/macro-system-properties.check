
scala> import scala.language.experimental.macros, scala.reflect.macros.blackbox.Context
import scala.language.experimental.macros
import scala.reflect.macros.blackbox.Context

scala>     object GrabContext {
      def lastContext = Option(System.getProperties.get("lastContext").asInstanceOf[reflect.macros.runtime.Context])
      // System.properties lets you stash true globals (unlike statics which are classloader scoped)
      def impl(c: Context)() = { import c.universe._; System.getProperties.put("lastContext", c); c.Expr[Unit](q"()") }
      def grab(): Unit = macro impl
    }
object GrabContext

scala>     object Test { class C(implicit a: Any) { GrabContext.grab } }
object Test

scala>     object Test { class C(implicit a: Any) { GrabContext.grab } }
object Test

scala> :quit
