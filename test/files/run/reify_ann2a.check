{
  class ann extends StaticAnnotation {
    <paramaccessor> private[this] val bar: `package`.List[Predef.String] = _;
    def <init>(bar: `package`.List[Predef.String]) = {
      super.<init>();
      ()
    }
  };
  @new ann(`package`.List.apply("1a")) @new ann(`package`.List.apply("1b")) class C[@new ann(`package`.List.apply("2a")) @new ann(`package`.List.apply("2b")) T >: Nothing <: Any] extends AnyRef {
    @new ann(`package`.List.apply("3a")) @new ann(`package`.List.apply("3b")) <paramaccessor> private[this] val x: T @ann(`package`.List.apply("4a")) @ann(`package`.List.apply("4b")) = _;
    def <init>(@new ann(`package`.List.apply("3a")) @new ann(`package`.List.apply("3b")) x: T @ann(`package`.List.apply("4a")) @ann(`package`.List.apply("4b"))) = {
      super.<init>();
      ()
    };
    @new ann(`package`.List.apply("5a")) @new ann(`package`.List.apply("5b")) def f(x: Int @ann(`package`.List.apply("6a")) @ann(`package`.List.apply("6b"))) = {
      @new ann(`package`.List.apply("7a")) @new ann(`package`.List.apply("7b")) val r = x.$plus(3): @ann(`package`.List.apply("8a")): @ann(`package`.List.apply("8b"));
      val s = (4: Int @ann(`package`.List.apply("9a")) @ann(`package`.List.apply("9b")));
      r.$plus(s)
    }
  };
  ()
}
{
  class ann extends scala.annotation.Annotation with scala.annotation.StaticAnnotation {
    <paramaccessor> private[this] val bar: List[String] = _;
    def <init>(bar: List[String]): ann = {
      ann.super.<init>();
      ()
    }
  };
  @ann(`package`.List.apply[String]("1a")) @ann(`package`.List.apply[String]("1b")) class C[@ann(`package`.List.apply[String]("2a")) @ann(`package`.List.apply[String]("2b")) T] extends AnyRef {
    @ann(`package`.List.apply[String]("3a")) @ann(`package`.List.apply[String]("3b")) <paramaccessor> private[this] val x: T @ann(`package`.List.apply[String]("4b")) @ann(`package`.List.apply[String]("4a")) = _;
    def <init>(@ann(`package`.List.apply[String]("3a")) @ann(`package`.List.apply[String]("3b")) x: T @ann(`package`.List.apply[String]("4b")) @ann(`package`.List.apply[String]("4a"))): C[T] = {
      C.super.<init>();
      ()
    };
    @ann(`package`.List.apply[String]("5a")) @ann(`package`.List.apply[String]("5b")) def f(x: Int @ann(`package`.List.apply[String]("6b")) @ann(`package`.List.apply[String]("6a"))): Int = {
      @ann(`package`.List.apply[String]("7a")) @ann(`package`.List.apply[String]("7b")) val r: Int @ann(`package`.List.apply[String]("8b")) @ann(`package`.List.apply[String]("8a")) = ((x.+(3): Int @ann(`package`.List.apply[String]("8a"))): Int @ann(`package`.List.apply[String]("8b")) @ann(`package`.List.apply[String]("8a")));
      val s: Int @ann(`package`.List.apply[String]("9b")) @ann(`package`.List.apply[String]("9a")) = (4: Int @ann(`package`.List.apply[String]("9b")) @ann(`package`.List.apply[String]("9a")));
      r.+(s)
    }
  };
  ()
}
