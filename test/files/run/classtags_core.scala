import scala.reflect.{ClassTag, classTag}

object Test extends App {
  println(implicitly[ClassTag[Byte]] eq ClassTag.Byte)
  println(implicitly[ClassTag[Byte]])
  println(implicitly[ClassTag[Short]] eq ClassTag.Short)
  println(implicitly[ClassTag[Short]])
  println(implicitly[ClassTag[Char]] eq ClassTag.Char)
  println(implicitly[ClassTag[Char]])
  println(implicitly[ClassTag[Int]] eq ClassTag.Int)
  println(implicitly[ClassTag[Int]])
  println(implicitly[ClassTag[Long]] eq ClassTag.Long)
  println(implicitly[ClassTag[Long]])
  println(implicitly[ClassTag[Float]] eq ClassTag.Float)
  println(implicitly[ClassTag[Float]])
  println(implicitly[ClassTag[Double]] eq ClassTag.Double)
  println(implicitly[ClassTag[Double]])
  println(implicitly[ClassTag[Boolean]] eq ClassTag.Boolean)
  println(implicitly[ClassTag[Boolean]])
  println(implicitly[ClassTag[Unit]] eq ClassTag.Unit)
  println(implicitly[ClassTag[Unit]])
  println(implicitly[ClassTag[Any]] eq ClassTag.Any)
  println(implicitly[ClassTag[Any]])
  println(implicitly[ClassTag[AnyVal]] eq ClassTag.AnyVal)
  println(implicitly[ClassTag[AnyVal]])
  println(implicitly[ClassTag[AnyRef]] eq ClassTag.AnyRef)
  println(implicitly[ClassTag[AnyRef]])
  println(implicitly[ClassTag[Object]] eq ClassTag.Object)
  println(implicitly[ClassTag[Object]])
  println(implicitly[ClassTag[Null]] eq ClassTag.Null)
  println(implicitly[ClassTag[Null]])
  println(implicitly[ClassTag[Nothing]] eq ClassTag.Nothing)
  println(implicitly[ClassTag[Nothing]])
}