class Foo extends Object {
  // fields:
  
  // methods
  def bar(): ref.WeakReference {
  locals: variable obj, value result
  startBlock: 1
  blocks: [1]
  
  1: 
    3	NEW REF(class Object)
    3	DUP(REF(class Object))
    3	CALL_METHOD java.lang.Object.<init> (static-instance)
    3	STORE_LOCAL(variable obj)
    3	SCOPE_ENTER variable obj
    4	NEW REF(class WeakReference)
    4	DUP(REF(class WeakReference))
    4	LOAD_LOCAL(variable obj)
    4	CALL_METHOD java.lang.ref.WeakReference.<init> (static-instance)
    4	STORE_LOCAL(value result)
    4	SCOPE_ENTER value result
    5	CONSTANT(null)
    5	STORE_LOCAL(variable obj)
    7	LOAD_LOCAL(value result)
    7	SCOPE_EXIT variable obj
    7	SCOPE_EXIT value result
    7	RETURN(REF(class WeakReference))
    
  }
  Exception handlers: 
    
  def <init>(): Foo {
  locals: 
  startBlock: 1
  blocks: [1]
  
  1: 
    9	THIS(Foo)
    9	CALL_METHOD java.lang.Object.<init> (super())
    9	RETURN(UNIT)
    
  }
  Exception handlers: 
    
  
}
