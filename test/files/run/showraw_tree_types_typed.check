Apply[1](Select[2](New[1](TypeTree[1]().setOriginal(AppliedTypeTree(Select[3](Ident[4](scala.collection.immutable.ImmutableArray), scala.collection.immutable.ImmutableArray.ofRef), List(TypeTree[5]().setOriginal(Select[5](Ident[6](scala.Predef), TypeName("String"))))))), termNames.CONSTRUCTOR), List(Apply[7](Apply[8](TypeApply[9](Select[10](Ident[11](scala.Array), TermName("apply")), List(TypeTree[5]())), List()), List(Apply[12](TypeApply[13](Select[14](Ident[6](scala.Predef), TermName("implicitly")), List(TypeTree[12]())), List(Typed[12](Apply[12](TypeApply[15](Select[16](Ident[17](scala.reflect.ClassTag), TermName("apply")), List(TypeTree[5]())), List(Literal[18](Constant(String)))), TypeTree[12]())))))))
[1] TypeRef(SingleType(ThisType(scala.collection.immutable), scala.collection.immutable.ImmutableArray), scala.collection.immutable.ImmutableArray.ofRef, List(TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List())))
[2] MethodType(List(TermName("unsafeArray")), TypeRef(SingleType(ThisType(scala.collection.immutable), scala.collection.immutable.ImmutableArray), scala.collection.immutable.ImmutableArray.ofRef, List(TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List()))))
[3] TypeRef(SingleType(ThisType(scala.collection.immutable), scala.collection.immutable.ImmutableArray), scala.collection.immutable.ImmutableArray.ofRef, List())
[4] SingleType(ThisType(scala.collection.immutable), scala.collection.immutable.ImmutableArray)
[5] TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List())
[6] SingleType(ThisType(scala), scala.Predef)
[7] TypeRef(ThisType(scala), scala.Array, List(TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List())))
[8] MethodType(List(TermName("evidence$4")), TypeRef(ThisType(scala), scala.Array, List(TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List()))))
[9] MethodType(List(TermName("xs")), MethodType(List(TermName("evidence$4")), TypeRef(ThisType(scala), scala.Array, List(TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List())))))
[10] PolyType(List(TypeName("T")), MethodType(List(TermName("xs")), MethodType(List(TermName("evidence$4")), TypeRef(ThisType(scala), scala.Array, List(TypeRef(NoPrefix, TypeName("T"), List()))))))
[11] SingleType(ThisType(scala), scala.Array)
[12] TypeRef(ThisType(scala.reflect), scala.reflect.ClassTag, List(TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List())))
[13] MethodType(List(TermName("e")), TypeRef(ThisType(scala.reflect), scala.reflect.ClassTag, List(TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List()))))
[14] PolyType(List(TypeName("T")), MethodType(List(TermName("e")), TypeRef(NoPrefix, TypeName("T"), List())))
[15] MethodType(List(TermName("runtimeClass1")), TypeRef(ThisType(scala.reflect), scala.reflect.ClassTag, List(TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List()))))
[16] PolyType(List(TypeName("T")), MethodType(List(TermName("runtimeClass1")), TypeRef(ThisType(scala.reflect), scala.reflect.ClassTag, List(TypeRef(NoPrefix, TypeName("T"), List())))))
[17] SingleType(ThisType(scala.reflect), scala.reflect.ClassTag)
[18] FoldableConstantType(Constant(TypeRef(ThisType(java.lang), java.lang.String, List())))
Apply[1](Select[2](New[1](TypeTree[1]().setOriginal(AppliedTypeTree(Ident[3](scala.collection.mutable.HashMap), List(TypeTree[4]().setOriginal(Select[4](Ident[5](scala.Predef), TypeName("String"))), TypeTree[4]().setOriginal(Select[4](Ident[5](scala.Predef), TypeName("String"))))))), termNames.CONSTRUCTOR), List())
[1] TypeRef(ThisType(scala.collection.mutable), scala.collection.mutable.HashMap, List(TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List()), TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List())))
[2] MethodType(List(), TypeRef(ThisType(scala.collection.mutable), scala.collection.mutable.HashMap, List(TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List()), TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List()))))
[3] TypeRef(ThisType(scala.collection.mutable), scala.collection.mutable.HashMap, List())
[4] TypeRef(SingleType(ThisType(scala), scala.Predef), TypeName("String"), List())
[5] SingleType(ThisType(scala), scala.Predef)
