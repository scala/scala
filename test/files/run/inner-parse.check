file Test$$anonfun$main$1.class
class Test$$anonfun$main$1 extends scala.runtime.AbstractFunction1$mcVL$sp
  interface                                        scala.Serializable
  inner/anon                                       anonymous class: Test$$anonfun$main$1
  descriptor                             <clinit>  ()V
  descriptor                                apply  (Lscala/Tuple2;)V
  descriptor                                apply  (Ljava/lang/Object;)Ljava/lang/Object;
  descriptor                                apply  (Ljava/lang/Object;)V
  descriptor                                cwd$1  Ljava/lang/String;
  descriptor                     serialVersionUID  J
  descriptor                               <init>  (Ljava/lang/String;)V
  signature                                 apply  (Lscala/Tuple2<Ljava/lang/String;Lscala/reflect/internal/JvmClassInfo;>;)V

file Test$.class
class Test$ extends java.lang.Object
  inner/anon                                       anonymous class: Test$$anonfun$main$1
  descriptor                             <clinit>  ()V
  descriptor                              MODULE$  LTest$;
  descriptor                                 main  ([Ljava/lang/String;)V
  descriptor                               <init>  ()V

file Test.class
class Test extends java.lang.Object
  inner/anon                                       anonymous class: Test$$anonfun$main$1
  descriptor                                 main  ([Ljava/lang/String;)V

file j/J_1$B$C$D.class
class j.J_1$B$C$D extends java.lang.Object
  inner                                         B  j.J_1$B in j.J_1
  inner                                         C  j.J_1$B$C in j.J_1$B
  inner/enclosing                               D  enclosing class: j.J_1$B$C
  descriptor                               <init>  (Lj/J_1$B$C;)V
  descriptor                               this$2  Lj/J_1$B$C;

file j/J_1$B$C.class
class j.J_1$B$C extends java.lang.Object
  inner                                         B  j.J_1$B in j.J_1
  inner/enclosing                               C  enclosing class: j.J_1$B
  inner/nested                                  D  member class: j.J_1$B$C$D
  descriptor                               <init>  (Lj/J_1$B;)V
  descriptor                               this$1  Lj/J_1$B;

file j/J_1$B.class
class j.J_1$B extends java.lang.Object
  inner/enclosing                               B  enclosing class: j.J_1
  inner/nested                                  C  member class: j.J_1$B$C
  descriptor                               <init>  (Lj/J_1;)V
  descriptor                               this$0  Lj/J_1;

file j/J_1.class
class j.J_1 extends java.lang.Object
  interface                                        java.util.RandomAccess
  inner/nested                                  B  member class: j.J_1$B
  descriptor                               <init>  ()V

file s/J_1$B$C$D.class
class s.J_1$B$C$D extends java.lang.Object
  inner                                         B  s.J_1$B in s.J_1
  inner                                         C  s.J_1$B$C in s.J_1$B
  inner/enclosing                               D  enclosing class: s.J_1$B$C
  descriptor                               $outer  Ls/J_1$B$C;
  descriptor                  s$J_1$B$C$D$$$outer  ()Ls/J_1$B$C;
  descriptor                               <init>  (Ls/J_1$B$C;)V

file s/J_1$B$C.class
class s.J_1$B$C extends java.lang.Object
  inner                                         B  s.J_1$B in s.J_1
  inner/enclosing                               C  enclosing class: s.J_1$B
  inner/nested                                  D  member class: s.J_1$B$C$D
  descriptor                               $outer  Ls/J_1$B;
  descriptor                    s$J_1$B$C$$$outer  ()Ls/J_1$B;
  descriptor                               <init>  (Ls/J_1$B;)V

file s/J_1$B.class
class s.J_1$B extends java.lang.Object
  inner/enclosing                               B  enclosing class: s.J_1
  inner/nested                                  C  member class: s.J_1$B$C
  descriptor                               $outer  Ls/J_1;
  descriptor                      s$J_1$B$$$outer  ()Ls/J_1;
  descriptor                               <init>  (Ls/J_1;)V

file s/J_1.class
class s.J_1 extends java.lang.Object
  interface                                        java.util.RandomAccess
  inner/nested                                  B  member class: s.J_1$B
  descriptor                               <init>  ()V

