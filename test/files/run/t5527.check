[[syntax trees at end of parser]]// Scala source: newSource1
package <empty> {
  object UselessComments extends scala.ScalaObject {
    def <init>() = {
      super.<init>();
      ()
    };
    var z = 0;
    def test1 = {
      object Maybe extends scala.ScalaObject {
        def <init>() = {
          super.<init>();
          ()
        };
        /** Some comment inside */
        def nothing() = ()
      };
      ()
    };
    def test2 = {
      var x = 4;
      if (true)
        {
          x = 5;
          val y = 6;
          ()
        }
      else
        ()
    };
    def test3 = {
      if (true)
        z = 3
      else
        ();
      val t = 4;
      0.to(4).foreach(((i) => println(i)))
    };
    val test4 = 'a' match {
      case ('0'| '1'| '2'| '3'| '4'| '5'| '6'| '7'| '8'| '9') => true
      case _ => false
    }
  };
  /** comments that we should keep */
  object UsefulComments extends scala.ScalaObject {
    def <init>() = {
      super.<init>();
      ()
    };
    /** class A */
    class A extends scala.ScalaObject {
      def <init>() = {
        super.<init>();
        ()
      };
      /** f */
      def f(i: Int) = i;
      /** v */
      val v = 1;
      /** u */
      var u = 2
    };
    /** trait B */
    abstract trait B extends scala.ScalaObject {
      def $init$() = {
        ()
      };
      /** T */
      type T >: _root_.scala.Nothing <: _root_.scala.Any;
      /** f */
      def f(i: Int): scala.Unit;
      /** v */
      val v = 1;
      /** u */
      var u = 2
    };
    /** object C */
    object C extends scala.ScalaObject {
      def <init>() = {
        super.<init>();
        ()
      };
      /** f */
      def f(i: Int) = i;
      /** v */
      val v = 1;
      /** u */
      var u = 2
    };
    /** class D */
    @new deprecated("use ... instead", "2.10.0") class D extends scala.ScalaObject {
      def <init>() = {
        super.<init>();
        ()
      }
    }
  }
}

