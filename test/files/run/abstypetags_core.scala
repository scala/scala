import scala.reflect.runtime.universe._

object Test extends App {
  println(implicitly[AbsTypeTag[Byte]] eq AbsTypeTag.Byte)
  println(implicitly[AbsTypeTag[Byte]])
  println(implicitly[AbsTypeTag[Short]] eq AbsTypeTag.Short)
  println(implicitly[AbsTypeTag[Short]])
  println(implicitly[AbsTypeTag[Char]] eq AbsTypeTag.Char)
  println(implicitly[AbsTypeTag[Char]])
  println(implicitly[AbsTypeTag[Int]] eq AbsTypeTag.Int)
  println(implicitly[AbsTypeTag[Int]])
  println(implicitly[AbsTypeTag[Long]] eq AbsTypeTag.Long)
  println(implicitly[AbsTypeTag[Long]])
  println(implicitly[AbsTypeTag[Float]] eq AbsTypeTag.Float)
  println(implicitly[AbsTypeTag[Float]])
  println(implicitly[AbsTypeTag[Double]] eq AbsTypeTag.Double)
  println(implicitly[AbsTypeTag[Double]])
  println(implicitly[AbsTypeTag[Boolean]] eq AbsTypeTag.Boolean)
  println(implicitly[AbsTypeTag[Boolean]])
  println(implicitly[AbsTypeTag[Unit]] eq AbsTypeTag.Unit)
  println(implicitly[AbsTypeTag[Unit]])
  println(implicitly[AbsTypeTag[Any]] eq AbsTypeTag.Any)
  println(implicitly[AbsTypeTag[Any]])
  println(implicitly[AbsTypeTag[AnyVal]] eq AbsTypeTag.AnyVal)
  println(implicitly[AbsTypeTag[AnyVal]])
  println(implicitly[AbsTypeTag[AnyRef]] eq AbsTypeTag.AnyRef)
  println(implicitly[AbsTypeTag[AnyRef]])
  println(implicitly[AbsTypeTag[Object]] eq AbsTypeTag.Object)
  println(implicitly[AbsTypeTag[Object]])
  println(implicitly[AbsTypeTag[Null]] eq AbsTypeTag.Null)
  println(implicitly[AbsTypeTag[Null]])
  println(implicitly[AbsTypeTag[Nothing]] eq AbsTypeTag.Nothing)
  println(implicitly[AbsTypeTag[Nothing]])
}