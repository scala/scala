t12720.scala:15: error: missing argument list for method f*** in class D***
Unapplied methods are only converted to functions when a function type is expected.
You can make this conversion explicit by writing `f _` or `f(_)` instead of `f`.
  def f = d.f
            ^
t12720.scala:10: warning: private constructor in class Test*** is never used
  private def this(stuff: Int) = this()
              ^
t12720.scala:20: warning: local method m*** in method forgone*** is never used
    def m = 17
        ^
t12720.scala:21: warning: local object j*** in method forgone*** is never used
    object j
           ^
t12720.scala:22: warning: local var totally*** in method forgone*** is never used
    var totally = 27
        ^
t12720.scala:24: warning: local val z*** in method forgone*** is never used
    val z = unset
        ^
t12720.scala:28: warning: private var misbegotten*** in class Test*** is never used
  private var misbegotten: Int = 42
              ^
t12720.scala:30: warning: private var forgotten (forgotten_=***) in class Test*** is never updated: consider using immutable val
  private var forgotten: Int = 42
              ^
t12720.scala:12: warning: private class Subtle*** in class Test*** is never used
  private class Subtle
                ^
t12720.scala:23: warning: local var unset*** in method forgone*** is never updated: consider using immutable val
    var unset: Int = 0
        ^
t12720.scala:16: warning: parameter x*** in method g*** is never used
  def g(x: Int) = println("error")
        ^
t12720.scala:25: warning: parameter y*** in anonymous function is never used
    for (x <- Option(42); y <- Option(27) if x < i; res = x - y) yield res
                          ^
11 warnings
1 error
