abstract-report2.scala:3: error: class Foo needs to be abstract, since:
it has 13 unimplemented members.
/** As seen from class Foo, the missing signatures are as follows.
 *  For convenience, these are usable as stub implementations.
 */
  def add(x$1: Int): Boolean = ???
  def addAll(x$1: java.util.Collection[_ <: Int]): Boolean = ???
  def clear(): Unit = ???
  def contains(x$1: Any): Boolean = ???
  def containsAll(x$1: java.util.Collection[_]): Boolean = ???
  def isEmpty(): Boolean = ???
  def iterator(): java.util.Iterator[Int] = ???
  def remove(x$1: Any): Boolean = ???
  def removeAll(x$1: java.util.Collection[_]): Boolean = ???
  def retainAll(x$1: java.util.Collection[_]): Boolean = ???
  def size(): Int = ???
  def toArray[T](x$1: Array[T with Object]): Array[T with Object] = ???
  def toArray(): Array[Object] = ???

class Foo extends Collection[Int]
      ^
abstract-report2.scala:5: error: class Bar needs to be abstract, since:
it has 13 unimplemented members.
/** As seen from class Bar, the missing signatures are as follows.
 *  For convenience, these are usable as stub implementations.
 */
  def add(x$1: List[_ <: String]): Boolean = ???
  def addAll(x$1: java.util.Collection[_ <: List[_ <: String]]): Boolean = ???
  def clear(): Unit = ???
  def contains(x$1: Any): Boolean = ???
  def containsAll(x$1: java.util.Collection[_]): Boolean = ???
  def isEmpty(): Boolean = ???
  def iterator(): java.util.Iterator[List[_ <: String]] = ???
  def remove(x$1: Any): Boolean = ???
  def removeAll(x$1: java.util.Collection[_]): Boolean = ???
  def retainAll(x$1: java.util.Collection[_]): Boolean = ???
  def size(): Int = ???
  def toArray[T](x$1: Array[T with Object]): Array[T with Object] = ???
  def toArray(): Array[Object] = ???

class Bar extends Collection[List[_ <: String]]
      ^
abstract-report2.scala:7: error: class Baz needs to be abstract, since:
it has 13 unimplemented members.
/** As seen from class Baz, the missing signatures are as follows.
 *  For convenience, these are usable as stub implementations.
 */
  def add(x$1: T): Boolean = ???
  def addAll(x$1: java.util.Collection[_ <: T]): Boolean = ???
  def clear(): Unit = ???
  def contains(x$1: Any): Boolean = ???
  def containsAll(x$1: java.util.Collection[_]): Boolean = ???
  def isEmpty(): Boolean = ???
  def iterator(): java.util.Iterator[T] = ???
  def remove(x$1: Any): Boolean = ???
  def removeAll(x$1: java.util.Collection[_]): Boolean = ???
  def retainAll(x$1: java.util.Collection[_]): Boolean = ???
  def size(): Int = ???
  def toArray[T](x$1: Array[T with Object]): Array[T with Object] = ???
  def toArray(): Array[Object] = ???

class Baz[T] extends Collection[T]
      ^
abstract-report2.scala:15: error: class Dingus needs to be abstract, since:
it has 7 unimplemented members.
/** As seen from class Dingus, the missing signatures are as follows.
 *  For convenience, these are usable as stub implementations.
 */
  // Members declared in scala.collection.IterableOnce
  def iterator(): Iterator[(Set[Int], String)] = ???

  // Members declared in scala.collection.IterableOps
  protected[this] def coll: List[(Set[Int], String)] = ???
  protected[this] def fromSpecificIterable(coll: Iterable[(Set[Int], String)]): List[(Set[Int], String)] = ???
  def iterableFactory: scala.collection.IterableFactory[[X]List[X]] = ???
  protected[this] def newSpecificBuilder(): scala.collection.mutable.Builder[(Set[Int], String),List[(Set[Int], String)]] = ???
  def toIterable: Iterable[(Set[Int], String)] = ???

  // Members declared in Xyz
  def foo(x: List[Int]): Boolean = ???

class Dingus extends Bippy[String, Set[Int], List[Int]]
      ^
four errors found
