logImplicits.scala:4: applied implicit conversion from xs.type to ?{def size: ?} = implicit def byteArrayOps(xs: Array[Byte]): scala.collection.ArrayOps[Byte]
  def f(xs: Array[Byte]) = xs.size
                           ^
logImplicits.scala:9: applied implicit conversion from String("abc") to ?{def map: ?} = implicit def augmentString(x: String): scala.collection.StringOps
  def f = "abc" map (_ + 1)
          ^
logImplicits.scala:17: inferred view from String("abc") to Int via C.this.convert: (p: "abc"): Int
  math.max(122, x: Int)
                ^
logImplicits.scala:21: applied implicit conversion from Int(1) to ?{def -> : ?} = final implicit def ArrowAssoc[A](self: A): ArrowAssoc[A]
  def f = (1 -> 2) + "c"
           ^
logImplicits.scala:21: applied implicit conversion from (Int, Int) to ?{def + : ?} = final implicit def any2stringadd[A](self: A): any2stringadd[A]
  def f = (1 -> 2) + "c"
             ^
logImplicits.scala:24: error: class Un needs to be abstract.
Missing implementation:
  def unimplemented: Int = ???

class Un {
      ^
1 error
