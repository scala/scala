8a9,10
> /* INSTRUMENTED VERSION */
> 
73a76,77
>   var arrayApplyCount = 0
> 
75,86c79,93
<   def array_apply(xs: AnyRef, idx: Int): Any = xs match {
<     case x: Array[AnyRef]  => x(idx).asInstanceOf[Any]
<     case x: Array[Int]     => x(idx).asInstanceOf[Any]
<     case x: Array[Double]  => x(idx).asInstanceOf[Any]
<     case x: Array[Long]    => x(idx).asInstanceOf[Any]
<     case x: Array[Float]   => x(idx).asInstanceOf[Any]
<     case x: Array[Char]    => x(idx).asInstanceOf[Any]
<     case x: Array[Byte]    => x(idx).asInstanceOf[Any]
<     case x: Array[Short]   => x(idx).asInstanceOf[Any]
<     case x: Array[Boolean] => x(idx).asInstanceOf[Any]
<     case x: Array[Unit]    => x(idx).asInstanceOf[Any]
<     case null => throw new NullPointerException
---
>   def array_apply(xs: AnyRef, idx: Int): Any = {
>     arrayApplyCount += 1
>     xs match {
>       case x: Array[AnyRef]  => x(idx).asInstanceOf[Any]
>       case x: Array[Int]     => x(idx).asInstanceOf[Any]
>       case x: Array[Double]  => x(idx).asInstanceOf[Any]
>       case x: Array[Long]    => x(idx).asInstanceOf[Any]
>       case x: Array[Float]   => x(idx).asInstanceOf[Any]
>       case x: Array[Char]    => x(idx).asInstanceOf[Any]
>       case x: Array[Byte]    => x(idx).asInstanceOf[Any]
>       case x: Array[Short]   => x(idx).asInstanceOf[Any]
>       case x: Array[Boolean] => x(idx).asInstanceOf[Any]
>       case x: Array[Unit]    => x(idx).asInstanceOf[Any]
>       case null => throw new NullPointerException
>     }
88a96,97
>   var arrayUpdateCount = 0
> 
90,101c99,113
<   def array_update(xs: AnyRef, idx: Int, value: Any): Unit = xs match {
<     case x: Array[AnyRef]  => x(idx) = value.asInstanceOf[AnyRef]
<     case x: Array[Int]     => x(idx) = value.asInstanceOf[Int]
<     case x: Array[Double]  => x(idx) = value.asInstanceOf[Double]
<     case x: Array[Long]    => x(idx) = value.asInstanceOf[Long]
<     case x: Array[Float]   => x(idx) = value.asInstanceOf[Float]
<     case x: Array[Char]    => x(idx) = value.asInstanceOf[Char]
<     case x: Array[Byte]    => x(idx) = value.asInstanceOf[Byte]
<     case x: Array[Short]   => x(idx) = value.asInstanceOf[Short]
<     case x: Array[Boolean] => x(idx) = value.asInstanceOf[Boolean]
<     case x: Array[Unit]    => x(idx) = value.asInstanceOf[Unit]
<     case null => throw new NullPointerException
---
>   def array_update(xs: AnyRef, idx: Int, value: Any): Unit = {
>     arrayUpdateCount += 1
>     xs match {
>       case x: Array[AnyRef]  => x(idx) = value.asInstanceOf[AnyRef]
>       case x: Array[Int]     => x(idx) = value.asInstanceOf[Int]
>       case x: Array[Double]  => x(idx) = value.asInstanceOf[Double]
>       case x: Array[Long]    => x(idx) = value.asInstanceOf[Long]
>       case x: Array[Float]   => x(idx) = value.asInstanceOf[Float]
>       case x: Array[Char]    => x(idx) = value.asInstanceOf[Char]
>       case x: Array[Byte]    => x(idx) = value.asInstanceOf[Byte]
>       case x: Array[Short]   => x(idx) = value.asInstanceOf[Short]
>       case x: Array[Boolean] => x(idx) = value.asInstanceOf[Boolean]
>       case x: Array[Unit]    => x(idx) = value.asInstanceOf[Unit]
>       case null => throw new NullPointerException
>     }
